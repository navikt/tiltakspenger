version: '3.8'
services:
  postgresVedtak:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_DB: vedtak
    ports:
      - 5432:5432
    volumes:
      - postgres-vedtak-data:/var/lib/postgresql/data

  postgresMeldekort:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_DB: meldekort
    ports:
      - 5431:5432
    volumes:
      - postgres-meldekort-data:/var/lib/postgresql/data

  postgresUtbetaling:
    image: postgres:14
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: test
      POSTGRES_DB: utbetaling
    ports:
      - 5430:5432
    volumes:
      - postgres-utbetaling-data:/var/lib/postgresql/data

  authserver:
    image: ghcr.io/navikt/mock-oauth2-server:2.1.1
    environment:
      TZ: Europe/Oslo
      SERVER_PORT: 6969
      LOG_LEVEL: ALL
      JSON_CONFIG: >
        {
            "interactiveLogin": true,
            "httpServer": "NettyWrapper",
            "tokenCallbacks": [
                {
                    "issuerId": "azure",
                    "tokenExpiry": 3600,
                    "requestMappings": [
                        {
                            "requestParam": "scope",
                            "match": "meldekort",
                            "claims": {
                                "aud": "tiltakspenger-meldekort-api",
                                "oid": "Z123456",
                                "sub": "Z123456",
                                "azp_name": "tiltakspenger-vedtak-rivers"
                            }
                        },
                        {
                            "requestParam": "scope",
                            "match": "vedtak",
                            "claims": {
                                "aud": "tiltakspenger-vedtak",
                                "oid": "Z123456",
                                "sub": "Z123456",
                                "azp_name": "tiltakspenger-vedtak-rivers",
                                "roles": [
                                    "LAGE_HENDELSER"
                                ]
                            }
                        },
                        {
                            "requestParam": "grant_type",
                            "match": "*",  
                            "claims": {
                                "aud": "tiltakspenger-vedtak",
                                "NAVident": "Z123456",
                                "preferred_username": "test.testesen@nav.no",
                                "name": "Test Testesen",
                                "groups": [
                                    "1b3a2c4d-d620-4fcf-a29b-a6cdadf29680",
                                    "79985315-b2de-40b8-a740-9510796993c6",
                                    "cbe715d0-6f67-46bf-86b4-688c4419b747"
                                ]
                            }
                        }
                    ]
                },
                {
                    "issuerId": "tokendings",
                    "tokenExpiry": 3600,
                    "requestMappings": [
                        {
                            "requestParam": "scope",
                            "match": "*",
                            "claims": {
                                "aud": "somescope",
                                "NAVident": "someident"
                            }
                        }
                    ]
                }
            ]
        }
    ports:
      - 6969:6969

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: INFO

  kafka-service:
    image: confluentinc/cp-kafka:7.5.0
    hostname: kafka-service
    container_name: kafka-service
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-service:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost

  vedtak-service:
    build:
      context: ./tiltakspenger-vedtak
      dockerfile: Dockerfile
    depends_on:
      - postgresVedtak
      - kafka-service
      - authserver
    ports:
      - 8080:8080
    environment:
      # Postgres env
      DB_HOST: postgresVedtak
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: test
      DB_DATABASE: vedtak
      # Authserver env
      AZURE_APP_CLIENT_ID: tiltakspenger-vedtak
      AZURE_OPENID_CONFIG_ISSUER: http://host.docker.internal:6969/azure
      AZURE_OPENID_CONFIG_JWKS_URI: http://host.docker.internal:6969/azure/jwks
      AZURE_APP_CLIENT_SECRET: secret
      AZURE_APP_WELL_KNOWN_URL: http://host.docker.internal:6969/azure/.well-known/openid-configuration
      # Kafka env
      KAFKA_BROKERS: "PLAINTEXT://kafka-service:29092"
      KAFKA_TRUSTSTORE_PATH: ""
      KAFKA_KEYSTORE_PATH: ""
      KAFKA_CREDSTORE_PASSWORD: ""
      TPTS_TOPIC: tpts.rapid.v1
      NAIS_CLUSTER_NAME: "lokal"

  meldekort-api-service:
    build:
      context: ./tiltakspenger-meldekort-api
      dockerfile: Dockerfile
    depends_on:
      - postgresMeldekort
      - vedtak-service
    ports:
      - 8081:8080
    environment:
      # Postgres env
      DB_HOST: postgresMeldekort
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: test
      DB_DATABASE: meldekort
      # Authserver env
      AZURE_APP_CLIENT_ID: tiltakspenger-meldekort-api
      AZURE_OPENID_CONFIG_ISSUER: http://host.docker.internal:6969/azure
      AZURE_OPENID_CONFIG_JWKS_URI: http://host.docker.internal:6969/azure/jwks
      AZURE_APP_CLIENT_SECRET: secret
      AZURE_APP_WELL_KNOWN_URL: http://host.docker.internal:6969/azure/.well-known/openid-configuration
      NAIS_CLUSTER_NAME: "compose"
      # Utbetaling
      SCOPE_UTBETALING: host.docker.internal.update-me
      UTBETALING_URL: utbetaling-service

  vedtak-rivers-service:
    build:
      context: ./tiltakspenger-vedtak-rivers
      dockerfile: Dockerfile
    depends_on:
      - vedtak-service
      - meldekort-api-service
    ports:
      - 8082:8080
    environment:
      # Kafka env
      KAFKA_BROKERS: "PLAINTEXT://kafka-service:29092"
      KAFKA_TRUSTSTORE_PATH: ""
      KAFKA_KEYSTORE_PATH: ""
      KAFKA_CREDSTORE_PASSWORD: ""
      TPTS_TOPIC: tpts.rapid.v1
      NAIS_CLUSTER_NAME: "compose"
      # Authserver env
      AZURE_APP_CLIENT_ID: tiltakspenger-vedtak-rivers
      AZURE_APP_CLIENT_SECRET: secret
      AZURE_APP_WELL_KNOWN_URL: http://host.docker.internal:6969/azure/.well-known/openid-configuration
      # Meldekort
      MELDEKORTSCOPE: meldekort
      MELDEKORTBASEURL: http://host.docker.internal:8081
      # Vedtak
      VEDTAKSCOPE: vedtak
      VEDTAKBASEURL: http://host.docker.internal:8080
      # Dokument
      DOKUMENTSCOPE: dokument
      DOKUMENTBASEURL: http://host.docker.internal:8084

  utbetaling-service:
    build:
      context: ./tiltakspenger-utbetaling
      dockerfile: Dockerfile
    depends_on:
      - authserver
    ports:
      - 8083:8080
    environment:
      PORT: 8080
      # Postgres env
      DB_HOST: postgresUtbetaling
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: test
      DB_DATABASE: utbetaling
      # Authserver env
      AZURE_APP_CLIENT_ID: tiltakspenger-vedtak
      AZURE_OPENID_CONFIG_ISSUER: http://host.docker.internal:6969/azure
      AZURE_OPENID_CONFIG_JWKS_URI: http://host.docker.internal:6969/azure/jwks
      AZURE_APP_CLIENT_SECRET: secret
      AZURE_APP_WELL_KNOWN_URL: http://host.docker.internal:6969/azure/.well-known/openid-configuration
      # Nais
      NAIS_CLUSTER_NAME: "compose"
      # Iverksett
      IVERKSETT_SCOPE: "" # Må fylles ut når vi har mockservice på denne tjenesten
      IVERKSETT_URL: "" # Må fylles ut når vi har mockservice på denne tjenesten

  dokument-service:
    build:
      context: ./tiltakspenger-dokument
      dockerfile: Dockerfile
    depends_on:
      - authserver
      - vedtak-service
    ports:
      - 8084:8080
    environment:
      PORT: 8080
      # Authserver env
      AZURE_APP_CLIENT_ID: tiltakspenger-vedtak
      AZURE_OPENID_CONFIG_ISSUER: http://host.docker.internal:6969/azure
      AZURE_OPENID_CONFIG_JWKS_URI: http://host.docker.internal:6969/azure/jwks
      AZURE_APP_CLIENT_SECRET: secret
      AZURE_APP_WELL_KNOWN_URL: http://host.docker.internal:6969/azure/.well-known/openid-configuration
      # Nais
      NAIS_CLUSTER_NAME: "compose"
      # Iverksett
      PDF_ENDPOINT_URL: "" # Må fylles ut når vi har mockservice på denne tjenesten
      JOARK_ENDPOINT_URL: "" # Må fylles ut når vi har mockservice på denne tjenesten
      JOARK_SCOPE: "" # Må fylles ut når vi har mockservice på denne tjenesten

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - 6379:6379
  wonderwall:
    image: ghcr.io/nais/wonderwall:latest
    depends_on:
      - authserver
    ports:
      - "2222:2222"
    environment:
      WONDERWALL_OPENID_CLIENT_ID: "tiltakspenger-vedtak"
      WONDERWALL_OPENID_CLIENT_JWK: '{"p":"_xCPvqs85ZZVg460Qfot26rQoNRPTOVDo5p4nqH3ep6BK_5TvoU5LFXd26W-1V1Lc5fcvvftClPOT201xgat4DVtliNtoc8od_tWr190A3AzbsAVFOx0nKa5uhLBxP9SsPM84llp6PXF6QTMGFiPYuoLDaQQqL1K4BbHq3ZzF2M","kty":"RSA","q":"7QLqW75zkfSDrn5rMoF50WXyB_ysNx6-2SvaXKGXaOn80IR7QW5vwkleJnsdz_1kr04rJws2p4HBJjUFfSJDi1Dapj7tbIwb0a1szDs6Y2fAa3DlzgXZCkoE2TIrW6UITgs14pI_a7RasclE71FpoZ78XNBvj3NmZugkNLBvRjs","d":"f7aT4poed8uKdcSD95mvbfBdb6X-M86d99su0c390d6gWwYudeilDugH9PMwqUeUhY0tdaRVXr6rDDIKLSE-uEyaYKaramev0cG-J_QWYJU2Lx-4vDGNHAE7gC99o1Ee_LXqMDCBawMYyVcSWx7PxGQfzhSsARsAIbkarO1sg9zsqPS4exSMbK8wyCTPgRbnkB32_UdZSGbdSib1jSYyyoAItZ8oZHiltVsZIlA97kS4AGPtozde043NC7Ik0uEzgB5qJ_tR7vW8MfDrBj6da2NrLh0UH-q28dooBO1vEu0rvKZIescXYk9lk1ZakHhhpZaLykDOGzxCpronzP3_kQ","e":"AQAB","use":"sig","qi":"9kMIR6pEoiwN3M6O0n8bnh6c3KbLMoQQ1j8_Zyir7ZIlmRpWYl6HtK0VnD88zUuNKTrQa7-jfE5uAUa0PubzfRqybACb4S3HIAuSQP00_yCPzCSRrbpGRDFqq-8eWVwI9VdiN4oqkaaWcL1pd54IDcHIbfk-ZtNtZgsOlodeRMo","dp":"VUecSAvI2JpjDRFxg326R2_dQWi6-uLMsq67FY7hx8WnOqZWKaUxcHllLENGguAmkgd8bv1F6-YJXNUO3Z7uE8DJWyGNTkSNK1CFsy0fBOdGywi-A7jrZFT6VBRhZRRY-YDaInPyzUkfWsGX26wAhPnrqCvqxgBEQJhdOh7obDE","alg":"RS256","dq":"7EUfw92T8EhEjUrRKkQQYEK0iGnGdBxePLiOshEUky3PLT8kcBHbr17cUJgjHBiKqofOVNnE3i9nkOMCWcAyfUtY7KmGndL-WIP-FYplpnrjQzgEnuENgEhRlQOCXZWjNcnPKdKJDqF4WAtAgSIznz6SbSQMUoDD8IoyraPFCck","n":"7CU8tTANiN6W_fD9SP1dK2vQvCkf7-nwvBYe5CfANV0_Bb0ZmQb77FVVsl1beJ7EYLz3cJmL8Is1RCHKUK_4ydqihNjEWTyZiQoj1i67pkqk_zRvfQa9raZR4uZbuBxx7dWUoPC6fFH2F_psAlHW0zf90fsLvhB6Aqq3uvO7XXqo8qNl9d_JSG0Rg_2QUYVb0WKmPVbbhgwtkFu0Tyuev-VZ9IzTbbr5wmZwEUVY7YAi73pDJkcZt5r2WjOF_cuIXe-O2vwbOrRgmJfHO9--mVLdATnEyrb6q2oy_75h6JjP-R4-TD1hyoFFoE2gmj-kSS6Z_Gggljs3Aw7--Nh10Q"}'
      WONDERWALL_OPENID_WELL_KNOWN_URL: http://host.docker.internal:6969/azure/.well-known/openid-configuration
      WONDERWALL_INGRESS: http://localhost:2222
      WONDERWALL_BIND_ADDRESS: 0.0.0.0:2222
      WONDERWALL_UPSTREAM_HOST: host.docker.internal:3000
      WONDERWALL_AUTO_LOGIN: true
    restart: on-failure

  dozzle:
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - 8090:8080
    environment:
      DOZZLE_NO_ANALYTICS: true

  wiremock:
    image: wiremock/wiremock:3.3.1
    command:
      - -global-response-templating
    volumes:
      - ./mock-req-res/mappings:/home/wiremock/mappings
    ports:
      - 8091:8080

volumes:
  postgres-vedtak-data: #
  postgres-meldekort-data: #
  postgres-utbetaling-data: #
